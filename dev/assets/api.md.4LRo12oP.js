import{_ as i,c as s,o as a,a6 as e}from"./chunks/framework.iQWzBMw_.js";const b=JSON.parse('{"title":"Comrade API","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),t={name:"api.md"},r=e(`<h1 id="Comrade-API" tabindex="-1">Comrade API <a class="header-anchor" href="#Comrade-API" aria-label="Permalink to &quot;Comrade API {#Comrade-API}&quot;">​</a></h1><h2 id="Index" tabindex="-1">Index <a class="header-anchor" href="#Index" aria-label="Permalink to &quot;Index {#Index}&quot;">​</a></h2><ul><li><a href="#Comrade.Comrade"><code>Comrade.Comrade</code></a></li><li><a href="#Comrade.AbstractArrayConfiguration"><code>Comrade.AbstractArrayConfiguration</code></a></li><li><a href="#Comrade.AbstractInstrumentModel"><code>Comrade.AbstractInstrumentModel</code></a></li><li><a href="#Comrade.AbstractObservationTable"><code>Comrade.AbstractObservationTable</code></a></li><li><a href="#Comrade.AbstractSkyModel"><code>Comrade.AbstractSkyModel</code></a></li><li><a href="#Comrade.AbstractVLBIPosterior"><code>Comrade.AbstractVLBIPosterior</code></a></li><li><a href="#Comrade.AbstractVLBITable"><code>Comrade.AbstractVLBITable</code></a></li><li><a href="#Comrade.AbstractVisibilityDatum"><code>Comrade.AbstractVisibilityDatum</code></a></li><li><a href="#Comrade.ArrayPrior"><code>Comrade.ArrayPrior</code></a></li><li><a href="#Comrade.CalTable"><code>Comrade.CalTable</code></a></li><li><a href="#Comrade.ClosureConfig"><code>Comrade.ClosureConfig</code></a></li><li><a href="#Comrade.ClosurePhases"><code>Comrade.ClosurePhases</code></a></li><li><a href="#Comrade.Coherencies"><code>Comrade.Coherencies</code></a></li><li><a href="#Comrade.DiskStore"><code>Comrade.DiskStore</code></a></li><li><a href="#Comrade.EHTArrayBaselineDatum"><code>Comrade.EHTArrayBaselineDatum</code></a></li><li><a href="#Comrade.EHTArrayConfiguration"><code>Comrade.EHTArrayConfiguration</code></a></li><li><a href="#Comrade.EHTClosurePhaseDatum"><code>Comrade.EHTClosurePhaseDatum</code></a></li><li><a href="#Comrade.EHTCoherencyDatum"><code>Comrade.EHTCoherencyDatum</code></a></li><li><a href="#Comrade.EHTLogClosureAmplitudeDatum"><code>Comrade.EHTLogClosureAmplitudeDatum</code></a></li><li><a href="#Comrade.EHTObservationTable"><code>Comrade.EHTObservationTable</code></a></li><li><a href="#Comrade.EHTVisibilityAmplitudeDatum"><code>Comrade.EHTVisibilityAmplitudeDatum</code></a></li><li><a href="#Comrade.EHTVisibilityDatum"><code>Comrade.EHTVisibilityDatum</code></a></li><li><a href="#Comrade.FixedSkyModel"><code>Comrade.FixedSkyModel</code></a></li><li><a href="#Comrade.GenericJones"><code>Comrade.GenericJones</code></a></li><li><a href="#Comrade.IIDSitePrior"><code>Comrade.IIDSitePrior</code></a></li><li><a href="#Comrade.IdealInstrumentModel"><code>Comrade.IdealInstrumentModel</code></a></li><li><a href="#Comrade.InstrumentModel"><code>Comrade.InstrumentModel</code></a></li><li><a href="#Comrade.IntegSeg"><code>Comrade.IntegSeg</code></a></li><li><a href="#Comrade.JonesD"><code>Comrade.JonesD</code></a></li><li><a href="#Comrade.JonesF"><code>Comrade.JonesF</code></a></li><li><a href="#Comrade.JonesG"><code>Comrade.JonesG</code></a></li><li><a href="#Comrade.JonesR"><code>Comrade.JonesR</code></a></li><li><a href="#Comrade.JonesSandwich"><code>Comrade.JonesSandwich</code></a></li><li><a href="#Comrade.LogClosureAmplitudes"><code>Comrade.LogClosureAmplitudes</code></a></li><li><a href="#Comrade.MemoryStore"><code>Comrade.MemoryStore</code></a></li><li><a href="#Comrade.ObservedSkyModel"><code>Comrade.ObservedSkyModel</code></a></li><li><a href="#Comrade.PosteriorSamples"><code>Comrade.PosteriorSamples</code></a></li><li><a href="#Comrade.SEFDReference"><code>Comrade.SEFDReference</code></a></li><li><a href="#Comrade.Scan"><code>Comrade.Scan</code></a></li><li><a href="#Comrade.ScanSeg"><code>Comrade.ScanSeg</code></a></li><li><a href="#Comrade.Segmentation"><code>Comrade.Segmentation</code></a></li><li><a href="#Comrade.SingleReference"><code>Comrade.SingleReference</code></a></li><li><a href="#Comrade.SingleStokesGain"><code>Comrade.SingleStokesGain</code></a></li><li><a href="#Comrade.SiteArray"><code>Comrade.SiteArray</code></a></li><li><a href="#Comrade.SiteLookup"><code>Comrade.SiteLookup</code></a></li><li><a href="#Comrade.SkyModel"><code>Comrade.SkyModel</code></a></li><li><a href="#Comrade.TimeTable"><code>Comrade.TimeTable</code></a></li><li><a href="#Comrade.TrackSeg"><code>Comrade.TrackSeg</code></a></li><li><a href="#Comrade.TransformedVLBIPosterior"><code>Comrade.TransformedVLBIPosterior</code></a></li><li><a href="#Comrade.VLBIPosterior"><code>Comrade.VLBIPosterior</code></a></li><li><a href="#Comrade.Visibilities"><code>Comrade.Visibilities</code></a></li><li><a href="#Comrade.VisibilityAmplitudes"><code>Comrade.VisibilityAmplitudes</code></a></li><li><a href="#Comrade.apply_fluctuations"><code>Comrade.apply_fluctuations</code></a></li><li><a href="#Comrade.arrayconfig-Tuple{Comrade.AbstractObservationTable}"><code>Comrade.arrayconfig</code></a></li><li><a href="#Comrade.baseline"><code>Comrade.baseline</code></a></li><li><a href="#Comrade.beamsize-Tuple{Comrade.AbstractArrayConfiguration}"><code>Comrade.beamsize</code></a></li><li><a href="#Comrade.beamsize-Tuple{Comrade.AbstractObservationTable}"><code>Comrade.beamsize</code></a></li><li><a href="#Comrade.beamsize"><code>Comrade.beamsize</code></a></li><li><a href="#Comrade.build_datum"><code>Comrade.build_datum</code></a></li><li><a href="#Comrade.caltable-Tuple{SiteArray}"><code>Comrade.caltable</code></a></li><li><a href="#Comrade.chi2"><code>Comrade.chi2</code></a></li><li><a href="#Comrade.closure_phases"><code>Comrade.closure_phases</code></a></li><li><a href="#Comrade.comrade_opt"><code>Comrade.comrade_opt</code></a></li><li><a href="#Comrade.dataproducts"><code>Comrade.dataproducts</code></a></li><li><a href="#Comrade.datatable"><code>Comrade.datatable</code></a></li><li><a href="#Comrade.dirty_beam"><code>Comrade.dirty_beam</code></a></li><li><a href="#Comrade.dirty_image"><code>Comrade.dirty_image</code></a></li><li><a href="#Comrade.domain-Tuple{Comrade.AbstractObservationTable}"><code>Comrade.domain</code></a></li><li><a href="#Comrade.domain-Tuple{Comrade.AbstractArrayConfiguration}"><code>Comrade.domain</code></a></li><li><a href="#Comrade.extract_amp"><code>Comrade.extract_amp</code></a></li><li><a href="#Comrade.extract_coherency"><code>Comrade.extract_coherency</code></a></li><li><a href="#Comrade.extract_cphase"><code>Comrade.extract_cphase</code></a></li><li><a href="#Comrade.extract_lcamp"><code>Comrade.extract_lcamp</code></a></li><li><a href="#Comrade.extract_table"><code>Comrade.extract_table</code></a></li><li><a href="#Comrade.extract_vis"><code>Comrade.extract_vis</code></a></li><li><a href="#Comrade.forward_model"><code>Comrade.forward_model</code></a></li><li><a href="#Comrade.idealvisibilities"><code>Comrade.idealvisibilities</code></a></li><li><a href="#Comrade.instrumentmodel-Tuple{Comrade.AbstractVLBIPosterior}"><code>Comrade.instrumentmodel</code></a></li><li><a href="#Comrade.likelihood"><code>Comrade.likelihood</code></a></li><li><a href="#Comrade.load_samples"><code>Comrade.load_samples</code></a></li><li><a href="#Comrade.logclosure_amplitudes"><code>Comrade.logclosure_amplitudes</code></a></li><li><a href="#Comrade.loglikelihood"><code>Comrade.loglikelihood</code></a></li><li><a href="#Comrade.logprior"><code>Comrade.logprior</code></a></li><li><a href="#Comrade.postsamples"><code>Comrade.postsamples</code></a></li><li><a href="#Comrade.prior_sample"><code>Comrade.prior_sample</code></a></li><li><a href="#Comrade.quadrangle"><code>Comrade.quadrangle</code></a></li><li><a href="#Comrade.resample_equal"><code>Comrade.resample_equal</code></a></li><li><a href="#Comrade.residual"><code>Comrade.residual</code></a></li><li><a href="#Comrade.residual_data"><code>Comrade.residual_data</code></a></li><li><a href="#Comrade.residuals"><code>Comrade.residuals</code></a></li><li><a href="#Comrade.rmap"><code>Comrade.rmap</code></a></li><li><a href="#Comrade.samplerinfo"><code>Comrade.samplerinfo</code></a></li><li><a href="#Comrade.samplerstats"><code>Comrade.samplerstats</code></a></li><li><a href="#Comrade.simulate_observation"><code>Comrade.simulate_observation</code></a></li><li><a href="#Comrade.site_tuple"><code>Comrade.site_tuple</code></a></li><li><a href="#Comrade.sites-Tuple{Comrade.AbstractObservationTable}"><code>Comrade.sites</code></a></li><li><a href="#Comrade.sites-Tuple{Comrade.AbstractArrayConfiguration}"><code>Comrade.sites</code></a></li><li><a href="#Comrade.sites-Tuple{Comrade.CalTable}"><code>Comrade.sites</code></a></li><li><a href="#Comrade.skymodel-Tuple{Comrade.AbstractVLBIPosterior, Any}"><code>Comrade.skymodel</code></a></li><li><a href="#Comrade.skymodel"><code>Comrade.skymodel</code></a></li><li><a href="#Comrade.timestamps"><code>Comrade.timestamps</code></a></li><li><a href="#Comrade.timetable"><code>Comrade.timetable</code></a></li><li><a href="#Comrade.triangle"><code>Comrade.triangle</code></a></li><li><a href="#HypercubeTransform.ascube-Tuple{VLBIPosterior}"><code>HypercubeTransform.ascube</code></a></li><li><a href="#HypercubeTransform.asflat-Tuple{VLBIPosterior}"><code>HypercubeTransform.asflat</code></a></li><li><a href="#TransformVariables.inverse-Tuple{Comrade.TransformedVLBIPosterior, Any}"><code>TransformVariables.inverse</code></a></li><li><a href="#TransformVariables.transform-Tuple{Comrade.TransformedVLBIPosterior, Any}"><code>TransformVariables.transform</code></a></li></ul><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.Comrade" href="#Comrade.Comrade">#</a> <b><u>Comrade.Comrade</u></b> — <i>Module</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Comrade</span></span></code></pre></div><p>Composable Modeling of Radio Emission</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/Comrade.jl#L1-L4" target="_blank" rel="noreferrer">source</a></p></div><br><h2 id="Model-Definitions" tabindex="-1">Model Definitions <a class="header-anchor" href="#Model-Definitions" aria-label="Permalink to &quot;Model Definitions {#Model-Definitions}&quot;">​</a></h2><h3 id="Models" tabindex="-1">Models <a class="header-anchor" href="#Models" aria-label="Permalink to &quot;Models {#Models}&quot;">​</a></h3><p>For the description of the model API see <a href="https://ehtjulia.github.io/VLBISkyModels.jl/stable/" target="_blank" rel="noreferrer">VLBISkyModels</a>.</p><h2 id="Data-Interface" tabindex="-1">Data Interface <a class="header-anchor" href="#Data-Interface" aria-label="Permalink to &quot;Data Interface {#Data-Interface}&quot;">​</a></h2><h3 id="Data-Tables" tabindex="-1">Data Tables <a class="header-anchor" href="#Data-Tables" aria-label="Permalink to &quot;Data Tables {#Data-Tables}&quot;">​</a></h3><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.AbstractVLBITable" href="#Comrade.AbstractVLBITable">#</a> <b><u>Comrade.AbstractVLBITable</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractVLBITable{F}</span></span></code></pre></div><p>An abstract VLBI table that is used to store data for a VLBI observation. To implement your own table you just need to specify the <code>VLBISkyModels.rebuild</code> function.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/abstract.jl#L3-L8" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.datatable" href="#Comrade.datatable">#</a> <b><u>Comrade.datatable</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">datatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBITable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a table from the observation <code>obs</code>. The table is usually a StructArray of fields</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/abstract.jl#L11-L15" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">datatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a tabular representation of the data. Note that for closures this ignores the covariance between quantities, which is otherwise included in the full <code>EHTObservationTable</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/obstable.jl#L32-L37" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.AbstractArrayConfiguration" href="#Comrade.AbstractArrayConfiguration">#</a> <b><u>Comrade.AbstractArrayConfiguration</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractArrayConfiguration{F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractVLBITable{F&lt;:Comrade.AbstractBaselineDatum}</span></span></code></pre></div><p>This defined the abstract type for an array configuration. Namely, baseline times, SEFD&#39;s, bandwidth, observation frequencies, etc.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/array.jl#L2-L7" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.EHTArrayBaselineDatum" href="#Comrade.EHTArrayBaselineDatum">#</a> <b><u>Comrade.EHTArrayBaselineDatum</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTArrayBaselineDatum{T, P, V} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractBaselineDatum</span></span></code></pre></div><p>A single datum of an <code>ArrayConfiguration</code></p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/array.jl#L54-L58" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.EHTArrayConfiguration" href="#Comrade.EHTArrayConfiguration">#</a> <b><u>Comrade.EHTArrayConfiguration</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTArrayConfiguration{A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.EHTArrayBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, F, T, S, D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(AbstractArray{A&lt;:Comrade.EHTArrayBaselineDatum})</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractArrayConfiguration{A&lt;:Comrade.EHTArrayBaselineDatum}</span></span></code></pre></div><p>Table that specified pertinent details about the EHT array during an observation. These are typically items that are known before the observation is made.</p><p><strong>Fields</strong></p><ul><li><p><code>bandwidth</code>: Observing bandwith (Hz)</p></li><li><p><code>tarr</code>: Telescope array file</p></li><li><p><code>scans</code>: Scan times</p></li><li><p><code>mjd</code>: modified julia date of the observation</p></li><li><p><code>ra</code>: RA of the observation in J2000 (deg)</p></li><li><p><code>dec</code>: DEC of the observation in J2000 (deg)</p></li><li><p><code>source</code>: Common source name</p></li><li><p><code>timetype</code>: Time zone used.</p></li><li><p><code>datatable</code>: A struct array of <code>EHTArrayBaselineDatum</code></p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/array.jl#L110-L118" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.ClosureConfig" href="#Comrade.ClosureConfig">#</a> <b><u>Comrade.ClosureConfig</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ClosureConfig{F, A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractArrayConfiguration{F}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, D, V, E} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractArrayConfiguration{F}</span></span></code></pre></div><p>Array config file for closure quantities. This stores the design matrix <code>designmat</code> that transforms from visibilties to closure products.</p><p><strong>Fields</strong></p><ul><li><p><code>ac</code>: Array configuration for visibilities</p></li><li><p><code>designmat</code>: Closure design matrix</p></li><li><p><code>vis</code>: visibilities to closure design matrix</p></li><li><p><code>noise</code>: visibility noises to closure design matrix</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/array.jl#L199-L206" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.sites-Tuple{Comrade.AbstractArrayConfiguration}" href="#Comrade.sites-Tuple{Comrade.AbstractArrayConfiguration}">#</a> <b><u>Comrade.sites</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sites</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get all the sites in a observation. The result is a vector of symbols.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/array.jl#L16-L20" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.domain-Tuple{Comrade.AbstractArrayConfiguration}" href="#Comrade.domain-Tuple{Comrade.AbstractArrayConfiguration}">#</a> <b><u>Comrade.domain</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ac; executor, header)</span></span></code></pre></div><p>Get the u, v, time, freq domain of the array.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/array.jl#L29-L33" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.beamsize-Tuple{Comrade.AbstractArrayConfiguration}" href="#Comrade.beamsize-Tuple{Comrade.AbstractArrayConfiguration}">#</a> <b><u>Comrade.beamsize</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">beamsize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ac</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the approximate beam size of the array <code>ac</code> as the inverse of the longest baseline distance.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/array.jl#L44-L49" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.logclosure_amplitudes" href="#Comrade.logclosure_amplitudes">#</a> <b><u>Comrade.logclosure_amplitudes</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logclosure_amplitudes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DesignMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the log-closure amplitudes for a set of visibilities with a design matrix <code>d</code>.</p><p><strong>Notes</strong></p><p>This uses a closure design matrix for the computation.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/array.jl#L298-L305" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.closure_phases" href="#Comrade.closure_phases">#</a> <b><u>Comrade.closure_phases</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closure_phases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DesignMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the closure phases for a set of visibilities and design matrix <code>d</code></p><p><strong>Notes</strong></p><p>This uses a closure design matrix for the computation.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/array.jl#L313-L320" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.AbstractObservationTable" href="#Comrade.AbstractObservationTable">#</a> <b><u>Comrade.AbstractObservationTable</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractObservationTable{F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractVisibilityDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractVLBITable{F&lt;:Comrade.AbstractVisibilityDatum}</span></span></code></pre></div><p>The abstract obervation table. This contains actual data plus the array configuration.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/obstable.jl#L3-L7" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.EHTObservationTable" href="#Comrade.EHTObservationTable">#</a> <b><u>Comrade.EHTObservationTable</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTObservationTable{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractVisibilityDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, E</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractObservationTable{T&lt;:Comrade.AbstractVisibilityDatum}</span></span></code></pre></div><p>The main data product type in <code>Comrade</code> this stores the <code>data</code> which can be a StructArray of any <code>AbstractInterferometryDatum</code> type. Note that the underlying structure is not part of the public API. Users should typically construct tables from the <a href="/Comrade.jl/dev/api#Comrade.extract_table"><code>extract_table</code></a> function.</p><p><strong>Fields</strong></p><ul><li><p><code>measurement</code>: Obervation measurement</p></li><li><p><code>noise</code>: Observation thermal noise</p></li><li><p><code>config</code>: Array config holds ancillary information about array</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/obstable.jl#L92-L102" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.domain-Tuple{Comrade.AbstractObservationTable}" href="#Comrade.domain-Tuple{Comrade.AbstractObservationTable}">#</a> <b><u>Comrade.domain</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ComradeBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Returns the u, v, time, frequency domain of the observation.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/obstable.jl#L23-L27" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.arrayconfig-Tuple{Comrade.AbstractObservationTable}" href="#Comrade.arrayconfig-Tuple{Comrade.AbstractObservationTable}">#</a> <b><u>Comrade.arrayconfig</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrayconfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrayconfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the array configuration for a given observation. If <code>p</code> is provided then only the property <code>p</code> is returned.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/obstable.jl#L42-L48" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.beamsize-Tuple{Comrade.AbstractObservationTable}" href="#Comrade.beamsize-Tuple{Comrade.AbstractObservationTable}">#</a> <b><u>Comrade.beamsize</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">beamsize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the approximate beam size of the observation <code>obs</code> as the inverse of the longest baseline distance.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/obstable.jl#L73-L78" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.sites-Tuple{Comrade.AbstractObservationTable}" href="#Comrade.sites-Tuple{Comrade.AbstractObservationTable}">#</a> <b><u>Comrade.sites</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sites</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get all the sites in a observation. The result is a vector of symbols.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/obstable.jl#L81-L85" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.TimeTable" href="#Comrade.TimeTable">#</a> <b><u>Comrade.TimeTable</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TimeTable{O</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractVLBITable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T, S}</span></span></code></pre></div><p>Wraps EHTObservationTable in a table that separates the observation into scans. This implements the table interface. You can access scans by directly indexing into the table. This will create a view into the table not copying the data.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> st </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> timetable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> st[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">begin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># grab first scan</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> st[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># grab last scan</span></span></code></pre></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/timetable.jl#L3-L16" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.Scan" href="#Comrade.Scan">#</a> <b><u>Comrade.Scan</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Scan{T, I, S}</span></span></code></pre></div><p>Composite type that holds information for a single scan of the telescope.</p><p><strong>Fields</strong></p><ul><li><p><code>time</code>: Scan time</p></li><li><p><code>index</code>: Scan indices which are (scan index, data start index, data end index)</p></li><li><p><code>scan</code>: Scan data usually a StructArray of a &lt;:AbstractVisibilityDatum</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/timetable.jl#L48-L55" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.timetable" href="#Comrade.timetable">#</a> <b><u>Comrade.timetable</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timetable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reorganizes the observation into a table of scans, where scan are defined by unique timestamps. To access the data you can use scalar indexing</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> timetable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Grab the first scan</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scan1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> st[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Acess the detections in the scan</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scan1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># grab e.g. the baselines</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scan1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:baseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/timetable.jl#L120-L139" target="_blank" rel="noreferrer">source</a></p></div><br><h3 id="Datums" tabindex="-1">Datums <a class="header-anchor" href="#Datums" aria-label="Permalink to &quot;Datums {#Datums}&quot;">​</a></h3><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.AbstractVisibilityDatum" href="#Comrade.AbstractVisibilityDatum">#</a> <b><u>Comrade.AbstractVisibilityDatum</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractVisibilityDatum</span></span></code></pre></div><p>An abstract type for all VLBI data types. See <a href="/Comrade.jl/dev/api#Comrade.EHTVisibilityDatum"><code>Comrade.EHTVisibilityDatum</code></a> for an example.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/datums.jl#L3-L6" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.EHTCoherencyDatum" href="#Comrade.EHTCoherencyDatum">#</a> <b><u>Comrade.EHTCoherencyDatum</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTCoherencyDatum{S, B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, M</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(StaticArraysCore.SArray{Tuple{2, 2}, Complex{S}, 2})</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, E</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(StaticArraysCore.SArray{Tuple{2, 2}, S, 2})</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractVisibilityDatum{S}</span></span></code></pre></div><p>A Datum for a single coherency matrix</p><p><strong>Fields</strong></p><ul><li><p><code>measurement</code>: coherency matrix, with entries in Jy</p></li><li><p><code>noise</code>: visibility uncertainty matrix, with entries in Jy</p></li><li><p><code>baseline</code>: baseline information</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/datums.jl#L31-L39" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.EHTVisibilityDatum" href="#Comrade.EHTVisibilityDatum">#</a> <b><u>Comrade.EHTVisibilityDatum</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTVisibilityDatum{Pol, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractSinglePolDatum{Pol, S&lt;:Number}</span></span></code></pre></div><p>A struct holding the information for a single measured complex visibility.</p><p><strong>FIELDS</strong></p><ul><li><p><code>measurement</code>: Complex Vis. measurement (Jy)</p></li><li><p><code>noise</code>: noise of the complex vis (Jy)</p></li><li><p><code>baseline</code>: baseline information</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/datums.jl#L57-L65" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.EHTVisibilityAmplitudeDatum" href="#Comrade.EHTVisibilityAmplitudeDatum">#</a> <b><u>Comrade.EHTVisibilityAmplitudeDatum</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTVisibilityAmplitudeDatum{P, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractSinglePolDatum{P, S&lt;:Number}</span></span></code></pre></div><p>A struct holding the information for a single measured visibility amplitude.</p><p><strong>FIELDS</strong></p><ul><li><p><code>measurement</code>: amplitude (Jy)</p></li><li><p><code>noise</code>: noise of the visibility amplitude (Jy)</p></li><li><p><code>baseline</code>: baseline information</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/datums.jl#L85-L93" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.EHTLogClosureAmplitudeDatum" href="#Comrade.EHTLogClosureAmplitudeDatum">#</a> <b><u>Comrade.EHTLogClosureAmplitudeDatum</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTLogClosureAmplitudeDatum{P, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.ClosureProducts{P, S&lt;:Number}</span></span></code></pre></div><p>A Datum for a single log closure amplitude.</p><hr><ul><li><p><code>measurement</code>: log-closure amplitude</p></li><li><p><code>noise</code>: log-closure amplitude noise in the high-snr limit</p></li><li><p><code>baseline</code>: baselines for the closure phase</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/datums.jl#L146-L153" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.EHTClosurePhaseDatum" href="#Comrade.EHTClosurePhaseDatum">#</a> <b><u>Comrade.EHTClosurePhaseDatum</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTClosurePhaseDatum{P, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.ClosureProducts{P, S&lt;:Number}</span></span></code></pre></div><p>A Datum for a single closure phase.</p><p><strong>Fields</strong></p><ul><li><p><code>measurement</code>: closure phase (rad)</p></li><li><p><code>noise</code>: noise of the closure phase assuming the high-snr limit</p></li><li><p><code>baseline</code>: baselines for the closure phase</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/datums.jl#L111-L119" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.triangle" href="#Comrade.triangle">#</a> <b><u>Comrade.triangle</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">triangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTClosurePhaseDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the sites used in the closure phase triangle.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/datums.jl#L137-L141" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.baseline" href="#Comrade.baseline">#</a> <b><u>Comrade.baseline</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">baseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scan</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the baselines for each datum in a scan</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/timetable.jl#L73-L77" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.quadrangle" href="#Comrade.quadrangle">#</a> <b><u>Comrade.quadrangle</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">quadrangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTClosurePhaseDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the sites used in the closure amplitude quadrangle.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/datums.jl#L170-L174" target="_blank" rel="noreferrer">source</a></p></div><br><h3 id="Data-Products" tabindex="-1">Data Products <a class="header-anchor" href="#Data-Products" aria-label="Permalink to &quot;Data Products {#Data-Products}&quot;">​</a></h3><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.extract_table" href="#Comrade.extract_table">#</a> <b><u>Comrade.extract_table</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, dataproducts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIDataProducts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extract an <a href="/Comrade.jl/dev/api#Comrade.EHTObservationTable"><code>Comrade.EHTObservationTable</code></a> table of data products <code>dataproducts</code>. To pass additional keyword for the data products you can pass them as keyword arguments to the data product type. For a list of potential data products see <code>subtypes(Comrade.VLBIDataProducts)</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dlcamp, dcphase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogClosureAmplitudes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;snrcut</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosurePhases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;snrcut</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cut_trivial</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dcoh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Coherencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dvis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VisibilityAmplitudes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L105-L118" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.Visibilities" href="#Comrade.Visibilities">#</a> <b><u>Comrade.Visibilities</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Visibilities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type to specify to extract the complex visibilities table in the <a href="/Comrade.jl/dev/api#Comrade.extract_table"><code>extract_table</code></a> function. Optional keywords are passed through <code>extract_table</code> to specify additional option.</p><p><strong>Special keywords for eht-imaging with Pyehtim.jl</strong></p><p>Any keyword arguments are ignored for now. Use eht-imaging directly to modify the data.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L73-L81" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.VisibilityAmplitudes" href="#Comrade.VisibilityAmplitudes">#</a> <b><u>Comrade.VisibilityAmplitudes</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Visibilities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type to specify to extract the log closure amplitudes table in the <a href="/Comrade.jl/dev/api#Comrade.extract_table"><code>extract_table</code></a> function. Optional keywords are passed through <code>extract_table</code> to specify additional option.</p><p><strong>Special keywords for eht-imaging with Pyehtim.jl</strong></p><p>For a list of potential keyword arguments see <code>eht-imaging</code> and <code>add_amp</code> command for obsdata.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L60-L68" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.ClosurePhases" href="#Comrade.ClosurePhases">#</a> <b><u>Comrade.ClosurePhases</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosuresPhases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type to specify to extract the closure phase table in the <a href="/Comrade.jl/dev/api#Comrade.extract_table"><code>extract_table</code></a> function. Optional keywords are passed through <code>extract_table</code> to specify additional option.</p><p><strong>Special keywords for eht-imaging with Pyehtim.jl</strong></p><p>For a list of potential keyword arguments see <code>eht-imaging</code> and <code>add_cphase</code> command for obsdata. In addition note we have changed the following:</p><ul><li>count: How the closures are formed, the available options are &quot;min-correct&quot;, &quot;min&quot;, &quot;max&quot;</li></ul><p><strong>Warning</strong></p><p>The <code>count</code> keyword argument is treated specially in <code>Comrade</code>. The default option is &quot;min-correct&quot; and should almost always be used. This option construct a minimal set of closure phases that is valid even when the array isn&#39;t fully connected. For testing and legacy reasons we <code>ehtim</code> other count options are also included. However, the current <code>ehtim</code> count=&quot;min&quot; option is broken and does construct proper minimal sets of closure quantities if the array isn&#39;t fully connected.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L9-L29" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.LogClosureAmplitudes" href="#Comrade.LogClosureAmplitudes">#</a> <b><u>Comrade.LogClosureAmplitudes</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogClosureAmplitudes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type to specify to extract the log closure amplitudes table in the <a href="/Comrade.jl/dev/api#Comrade.extract_table"><code>extract_table</code></a> function. Optional keywords are passed through <code>extract_table</code> to specify additional option.</p><p><strong>Special keywords for eht-imaging with Pyehtim.jl</strong></p><p>For a list of potential keyword arguments see <code>eht-imaging</code> and <code>add_cphase</code> command for obsdata. In addition note we have changed the following:</p><ul><li>count: How the closures are formed, the available options are &quot;min-correct&quot;, &quot;min&quot;, &quot;max&quot;</li></ul><p>Returns an EHTObservation with log-closure amp. datums</p><p><strong>Warning</strong></p><p>The <code>count</code> keyword argument is treated specially in <code>Comrade</code>. The default option is &quot;min-correct&quot; and should almost always be used. This option construct a minimal set of closure phases that is valid even when the array isn&#39;t fully connected. For testing and legacy reasons we <code>ehtim</code> other count options are also included. However, the current <code>ehtim</code> count=&quot;min&quot; option is broken and does construct proper minimal sets of closure quantities if the array isn&#39;t fully connected.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L34-L55" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.Coherencies" href="#Comrade.Coherencies">#</a> <b><u>Comrade.Coherencies</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Coherencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type to specify to extract the coherency matrices table in the <a href="/Comrade.jl/dev/api#Comrade.extract_table"><code>extract_table</code></a> function. Optional keywords are passed through <code>extract_table</code> to specify additional option.</p><p><strong>Special keywords for eht-imaging with Pyehtim.jl</strong></p><p>Any keyword arguments are ignored for now. Use eht-imaging directly to modify the data.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L86-L94" target="_blank" rel="noreferrer">source</a></p></div><br><h2 id="VLBI-Modeling" tabindex="-1">VLBI Modeling <a class="header-anchor" href="#VLBI-Modeling" aria-label="Permalink to &quot;VLBI Modeling {#VLBI-Modeling}&quot;">​</a></h2><h3 id="Sky-Models" tabindex="-1">Sky Models <a class="header-anchor" href="#Sky-Models" aria-label="Permalink to &quot;Sky Models {#Sky-Models}&quot;">​</a></h3><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.AbstractSkyModel" href="#Comrade.AbstractSkyModel">#</a> <b><u>Comrade.AbstractSkyModel</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractSkyModel</span></span></code></pre></div><p>The abstract type for Comrade Sky Models. For a concrete implementation see <a href="/Comrade.jl/dev/api#Comrade.SkyModel"><code>SkyModel</code></a>.</p><p>Any subtype must implement the following methods</p><ul><li><code>set_array(m::AbstractSkyModel, array::AbstractArrayConfiguration)</code>: Sets the array configuration for the sky model <code>m</code> and returns the observed sky model and prior.</li></ul><p>The following methods have default implementations:</p><ul><li><p><code>idealvisibilities(m::AbstractSkyModel, x)</code>: Computes the ideal visibilities of the sky model <code>m</code> given the model parameters <code>x</code>.</p></li><li><p><code>skymodel(m::AbstractSkyModel, x)</code>: Returns the sky model image given the model parameters <code>x</code>.</p></li><li><p><code>domain(m::AbstractSkyModel)</code>: Returns the domain of the sky model <code>m</code>.</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/skymodels/models.jl#L4-L19" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.SkyModel" href="#Comrade.SkyModel">#</a> <b><u>Comrade.SkyModel</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, prior, grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; algorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NFFTAlg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), metadata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a sky model using the function map <code>f</code> with parameter priors <code>prior</code>, where the image model is defined on the domain <code>grid</code>. If the underlying model produced by <code>f</code> is non-analytic, then <code>algorithm</code> is used to numerically Fourier transform the model image. The <code>metadata</code> option contains additional information needed by the model <code>f</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>f(x, p)</code> : A function must be two arguments, where <code>x</code> are the model parameters and <code>p</code> is the metadata. typically <code>x</code> and <code>p</code> are named tuples.</p></li><li><p><code>prior</code> : A named tuple of priors for the model parameters defined in <code>x</code>. Each model parameter used in <code>x</code> must have a defined element in the prior.</p></li><li><p><code>grid</code> : The domain on which the model is defined. This defines the field of view and resolution of the model. Note that if <code>f</code> produces a analytic model then this field of view isn&#39;t used directly in the computation of the visibilities.</p></li></ul><p><strong>Optional Arguments</strong></p><ul><li><p><code>algorithm</code> : The Fourier transform algorithm used to compute the visibilities. The default is <code>NFFTAlg()</code> which uses a non-uniform fast Fourier transform. Other options can be found by using <code>subtypes(VLBISkyModels.FourierTransform)</code></p></li><li><p><code>metadata</code> : Additional information needed by the model <code>f</code>. These are the addtional arguments passed to the model function <code>f</code>.</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/skymodels/models.jl#L42-L66" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.FixedSkyModel" href="#Comrade.FixedSkyModel">#</a> <b><u>Comrade.FixedSkyModel</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FixedSkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; algorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NFFTAlg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Construct a sky model that has no free parameters. This is useful for models where the image structure is known apriori but the instrument model is unknown.</p><p><strong>Arguments</strong></p><ul><li><p><code>m</code> : The fixed sky model.</p></li><li><p><code>grid</code> : The domain on which the model is defined. This defines the field of view and resolution of the model. Note that if <code>f</code> produces a analytic model then this field of view isn&#39;t used directly in the computation of the visibilities.</p></li></ul><p><strong>Optional Arguments</strong></p><ul><li><code>algorithm</code> : The Fourier transform algorithm used to compute the visibilities. The default is <code>NFFTAlg()</code> which uses a non-uniform fast Fourier transform. Other options can be found by using <code>subtypes(VLBISkyModels.FourierTransform)</code></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/skymodels/models.jl#L116-L133" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.idealvisibilities" href="#Comrade.idealvisibilities">#</a> <b><u>Comrade.idealvisibilities</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">idealvisibilities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p>Computes the ideal non-corrupted visibilities of the sky model <code>m</code> given the model parameters <code>x</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/skymodels/models.jl#L102-L106" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.skymodel-Tuple{Comrade.AbstractVLBIPosterior, Any}" href="#Comrade.skymodel-Tuple{Comrade.AbstractVLBIPosterior, Any}">#</a> <b><u>Comrade.skymodel</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skymodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Returns the sky model or image of a posterior using the parameter values<code>θ</code></p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/abstract.jl#L133-L137" target="_blank" rel="noreferrer">source</a></p></div><br><h3 id="Instrument-Models" tabindex="-1">Instrument Models <a class="header-anchor" href="#Instrument-Models" aria-label="Permalink to &quot;Instrument Models {#Instrument-Models}&quot;">​</a></h3><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.CalTable" href="#Comrade.CalTable">#</a> <b><u>Comrade.CalTable</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CalTable{T, G</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(AbstractVecOrMat)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>A Tabes of calibration quantities. The columns of the table are the telescope sites codes. The rows are the calibration quantities at a specific time stamp. This user should not use this struct directly. Instead that should call <a href="/Comrade.jl/dev/api#Comrade.caltable-Tuple{SiteArray}"><code>caltable</code></a>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/caltable.jl#L3-L9" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.caltable-Tuple{SiteArray}" href="#Comrade.caltable-Tuple{SiteArray}">#</a> <b><u>Comrade.caltable</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">caltable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SiteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a calibration table from a site array</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/caltable.jl#L195-L199" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.sites-Tuple{Comrade.CalTable}" href="#Comrade.sites-Tuple{Comrade.CalTable}">#</a> <b><u>Comrade.sites</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sites</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CalTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the sites in the calibration table</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/caltable.jl#L22-L26" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.IIDSitePrior" href="#Comrade.IIDSitePrior">#</a> <b><u>Comrade.IIDSitePrior</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segmentation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dist)</span></span></code></pre></div><p>Create a site prior that is independent and identically distributed (IID) across all times and frequencies. The <code>seg</code> argument is a segmentation object that defines how fine the time segmentation is. The <code>dist</code> argument is the distribution of the site prior.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>creates a site prior that is constant across scans and each scan has a unit Normal prior.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/priors/independent.jl#L7-L22" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.ArrayPrior" href="#Comrade.ArrayPrior">#</a> <b><u>Comrade.ArrayPrior</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(default_dist; refant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), phase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a prior for an entire array of sites.</p><ul><li><p>The <code>default_dist</code> is the default distribution for all sites. Currently only <code>IIDSitePrior</code> is supported.</p></li><li><p>Different priors for specified sites can be set using kwargs.</p></li><li><p>The <code>refant</code> set the reference antennae to be used and is typically only done for priors that</p></li></ul><p>correspond to gain phases.</p><ul><li>The <code>phase</code> argument is a boolean that specifies if</li></ul><p>the prior is for a <code>phase</code> or not. <em>The phase argument is experimental and we recommend setting it to false currently.</em></p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) refant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SEFDReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>means that every site has a normal prior with mean 0 and 0.1 std. dev. except LM which is mean zero and unit std. dev. Finally the refant is using the <a href="/Comrade.jl/dev/api#Comrade.SEFDReference"><code>SEFDReference</code></a> scheme.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/priors/array_priors.jl#L9-L30" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.Segmentation" href="#Comrade.Segmentation">#</a> <b><u>Comrade.Segmentation</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Segmentation</span></span></code></pre></div><p>The data segmentation scheme to use. This is used specify how often we want various instrument hyperparameters to change. A user subtyping this expression must implement the following functions:</p><ul><li><a href="/Comrade.jl/dev/api#Comrade.timestamps"><code>timestamps</code></a>: Specifies the time region for each segmentation scheme given an array</li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/priors/segmentation.jl#L3-L11" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.IntegSeg" href="#Comrade.IntegSeg">#</a> <b><u>Comrade.IntegSeg</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IntegSeg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.Segmentation</span></span></code></pre></div><p>Data segmentation such that the quantity is constant over the time stamps in the data. If the data is scan-averaged before then <code>IntegSeg</code> will be identical to <code>ScanSeg</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/priors/segmentation.jl#L32-L37" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.ScanSeg" href="#Comrade.ScanSeg">#</a> <b><u>Comrade.ScanSeg</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ScanSeg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.Segmentation</span></span></code></pre></div><p>Data segmentation such that the quantity is constant over a <code>scan</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/priors/segmentation.jl#L23-L27" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.TrackSeg" href="#Comrade.TrackSeg">#</a> <b><u>Comrade.TrackSeg</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TrackSeg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.Segmentation</span></span></code></pre></div><p>Data segmentation such that the quantity is constant over a <code>track</code>, i.e., the observation &quot;night&quot;.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/priors/segmentation.jl#L15-L19" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.timestamps" href="#Comrade.timestamps">#</a> <b><u>Comrade.timestamps</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timestamps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segmentation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the time stamps or really a vector of integration time regions for a given segmentation scheme <code>seg</code> and array configuration <code>array</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/priors/segmentation.jl#L40-L45" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.SingleReference" href="#Comrade.SingleReference">#</a> <b><u>Comrade.SingleReference</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SingleReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(site</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val)</span></span></code></pre></div><p>Selects a single reference site for all scans. The value of the site is set to <code>val</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/priors/refant.jl#L7-L11" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.SEFDReference" href="#Comrade.SEFDReference">#</a> <b><u>Comrade.SEFDReference</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SEFDReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sefd_index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Selects the reference site based on the SEFD of each telescope, where the smallest SEFD is preferentially selected. The reference gain is set to <code>val</code> and the user can select to use the <code>n</code> lowest SEFD site by passing <code>sefd_index = n</code>.</p><p><strong>Notes</strong></p><p>This is done on a per-scan basis so if a site is missing from a scan the next highest SEFD site will be used.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/priors/refant.jl#L24-L34" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.SingleStokesGain" href="#Comrade.SingleStokesGain">#</a> <b><u>Comrade.SingleStokesGain</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SingleStokesGain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_map)</span></span></code></pre></div><p>Construct a gain term that is applicable to a single measured visibility. This is useful for pure stokes I modeling. The <code>param_map</code> is a function that maps the set of parameters to the gain term.</p><p>The arguments of <code>param_map</code> is typically a named tuple, where some of the elements are the parameter values needed to compute the gain. The return value of the <code>param_map</code> should be a single number or complex gain.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SingleStokesGain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gp))</span></span></code></pre></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/jonesmatrices.jl#L9-L25" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.JonesG" href="#Comrade.JonesG">#</a> <b><u>Comrade.JonesG</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JonesG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_map)</span></span></code></pre></div><p>Describes a gain Jones matrix with layout</p><p>g1 0 0 g2</p><p>where <code>g1</code> and <code>g2</code> are the gains for first and second feed of the telescope.</p><p>The <code>param_map</code> is a function that maps the set of parameters to the gain term. The arguments of <code>param_map</code> is typically a named tuple, where some of the elements are the parameter values needed to compute the gain. The return value of the <code>param_map</code> should be a two element tuple where the first element is the complex gain <code>g1</code> and the second element is the complex gain <code>g2</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    g1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lg1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gp1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    g2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lgratio </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gpratio)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g1, g2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/jonesmatrices.jl#L31-L55" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.JonesD" href="#Comrade.JonesD">#</a> <b><u>Comrade.JonesD</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JonesD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_map)</span></span></code></pre></div><p>Describes a leakage Jones matrix with layout</p><p>1 d1 d2 1</p><p>where <code>d1</code> and <code>d2</code> are the d-terms for first and second feed of the telescope.</p><p>The <code>param_map</code> is a function that maps the set of parameters to the gain term. The arguments of <code>param_map</code> is typically a named tuple, where some of the elements are the parameter values needed to compute the gain. The return value of the <code>param_map</code> should be a two element tuple where the first element is the complex d-term <code>d1</code> and the second element is the complex d-term <code>d2</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> complex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d1real, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d1imag)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> complex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d2real, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d2imag)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d1, d2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/jonesmatrices.jl#L62-L86" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.JonesR" href="#Comrade.JonesR">#</a> <b><u>Comrade.JonesR</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JonesR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;add_fr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>The <strong>response</strong> Jones matrix. This is the reponse the telescope has to the incoming electric field, if the telescope was ideal. If <code>add_fr=true</code> then feed rotation are included.</p><p>This Jones matrix has no parameters so it doesn&#39;t accept a <code>param_map</code>. The <code>add_fr</code> argument is a boolean that specifies if feed rotation should be included.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/jonesmatrices.jl#L138-L147" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.JonesF" href="#Comrade.JonesF">#</a> <b><u>Comrade.JonesF</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JonesF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;add_fr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>The <strong>feed rotation</strong> Jones matrix. This matrix describes the orientation of the feeds of the telescope.</p><p>This Jones matrix has no parameters so it doesn&#39;t accept a <code>param_map</code>. The <code>add_fr</code> argument is a boolean that specifies if feed rotation should be included.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/jonesmatrices.jl#L117-L126" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.GenericJones" href="#Comrade.GenericJones">#</a> <b><u>Comrade.GenericJones</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GenericJones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_map)</span></span></code></pre></div><p>Construct a generic dense jones matrix with four parameterized elements.</p><p>The <code>param_map</code> is a function that maps the set of parameters to the gain term. The arguments of <code>param_map</code> is typically a named tuple, where some of the elements are the parameter values needed to compute the gain. The return value of the <code>param_map</code> should be a four element tuple where the elements are the entries of the jones matrix in column major order.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">J </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GenericJones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">j11, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">j21, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">j12, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">j22</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/jonesmatrices.jl#L93-L111" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.JonesSandwich" href="#Comrade.JonesSandwich">#</a> <b><u>Comrade.JonesSandwich</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JonesSandwich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([decomp_function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">splat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),] matrices</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJonesMatrix...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs a Jones matrix that is the results combining multiple Jones matrices together. The specific composition is determined by the <code>decomp_function</code>. For example if the decomp function is <code>*</code> then the matrices are multiplied together, if it is <code>+</code> then they are added.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gR, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gL)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Gain matrix</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dR, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dL)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># leakage matrix</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Feed rotation matrix</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">J </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesSandwich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">splat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), G, D, F) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Construct the full Jones matrix as G*D*F</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or if you want to include FR calibration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">J </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesSandwich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(G, D, F) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g, d, f</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> adjoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f)g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/jonesmatrices.jl#L175-L197" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.AbstractInstrumentModel" href="#Comrade.AbstractInstrumentModel">#</a> <b><u>Comrade.AbstractInstrumentModel</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractInstrumentModel</span></span></code></pre></div><p>The abstract instrument model. For a concrete implementation see <a href="/Comrade.jl/dev/api#Comrade.IdealInstrumentModel"><code>IdealInstrumentModel</code></a> and <a href="/Comrade.jl/dev/api#Comrade.InstrumentModel"><code>InstrumentModel</code></a>.</p><p>Any subtype must implement the following methods</p><ul><li><p><code>set_array(m::AbstractInstrumentModel, array::AbstractArrayConfiguration)</code>: Sets the array configuration for the instrument model <code>m</code> and returns the observed instrument model and prior.</p></li><li><p><code>apply_instrument(vis, m::AbstractInstrumentModel, x)</code>: Applies the instrument model <code>m</code> to the visibilities <code>vis</code> given the model parameters <code>x</code>.</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/model.jl#L3-L15" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.IdealInstrumentModel" href="#Comrade.IdealInstrumentModel">#</a> <b><u>Comrade.IdealInstrumentModel</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IdealInstrument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs an ideal instrument that has no corruptions or feed rotation.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/model.jl#L18-L22" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.InstrumentModel" href="#Comrade.InstrumentModel">#</a> <b><u>Comrade.InstrumentModel</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jones, prior; refbasis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CirBasis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Builds an instrument model using the jones matrix <code>jones</code>, with priors <code>prior</code>. The reference basis is <code>refbasis</code> and is used to define what the ideal basis is. Namely, the basis that you have the ideal visibilties to be represented in. For classical VLBI <code>refbasis = CirBasis</code> is a good default option, sinc the majority of the array uses circular feeds. For linear feed arrays like VGOS a user should switch to <code>LinBasis</code>, although failure to do so will not cause any errors, and is just a less efficient representation of the visibilities.</p><p><strong>Arguments</strong></p><ul><li><p><code>jones</code> : The jones matrix that represents the instrument. This is a function that takes in the parameters of the instrument and returns a jones matrix. See <a href="/Comrade.jl/dev/api#Comrade.SingleStokesGain"><code>SingleStokesGain</code></a> for a Stokes I example and <a href="/Comrade.jl/dev/api#Comrade.JonesG"><code>JonesG</code></a> or <a href="/Comrade.jl/dev/api#Comrade.JonesD"><code>JonesD</code></a> for polarized examples.</p></li><li><p><code>prior</code>: A named tuple of <a href="/Comrade.jl/dev/api#Comrade.ArrayPrior"><code>ArrayPrior</code></a> that specify what the priors are for each component used to construct the jones matrix using the function <code>jones</code></p></li></ul><p><strong>Optional Arguments</strong></p><ul><li><code>refbasis</code>: The reference basis used for the computation. The default is <code>CirBasis()</code> which are circular feeds.</li></ul><p><strong>Example</strong></p><p>A Stokes I example is</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SingleStokesGain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pg))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> intprior </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            pg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiagVonMises</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> intm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(G, intprior)</span></span></code></pre></div><p>A standard polarized example is</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        gR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lgr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gpr)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        gL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lgrat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gprat)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gR, gL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> complex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dRre, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dRim)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> complex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dLre, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dLim)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gR, gL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> J </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesSandwich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(G, D, R)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> intprior </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lgr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    gpr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiagonalVonMises</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    lgrat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    gprat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiagonalVonMises</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dRre </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dRim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dLre </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dLim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> intm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(J, intprior)</span></span></code></pre></div><p>which construct the gain matrix from R and ratios, and D is the small leakage matrix. <a href="/Comrade.jl/dev/api#Comrade.JonesR"><code>JonesR</code></a> is the <em>response matrix</em> that controls how the site responds to the ideal visibility in the reference basis.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/model.jl#L79-L144" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.SiteArray" href="#Comrade.SiteArray">#</a> <b><u>Comrade.SiteArray</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SiteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, times, frequencies, sites)</span></span></code></pre></div><p>A <code>SiteArray</code> is an array of data that has a specified ordering of <code>times</code>, <code>frequencies</code>, and <code>sites</code>. Each data point is assigned a unique <code>time</code>, <code>frequency</code>, and <code>site</code> code. This allows for easy selection of data points based on these criteria and forms the base array for instrument modeling.</p><p>To select a subset of the data based on a specifid site, time and frequency you can use</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sarr[S=:ALMA, Ti=1:10, Fr=1:10]</span></span></code></pre></div><p>which will grab the first 10 time and frequency points for the ALMA site.</p><p>Otherwise indexing into the array will return an element whose time, frequency, and site are the element of the <code>times</code>, <code>frequencies</code>, and <code>sites</code> arrays respectively.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/site_array.jl#L3-L18" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.SiteLookup" href="#Comrade.SiteLookup">#</a> <b><u>Comrade.SiteLookup</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SiteLookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SiteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a site lookup dictionary for a site array.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/site_array.jl#L183-L187" target="_blank" rel="noreferrer">source</a></p></div><br><h3 id="Posterior-Constructions" tabindex="-1">Posterior Constructions <a class="header-anchor" href="#Posterior-Constructions" aria-label="Permalink to &quot;Posterior Constructions {#Posterior-Constructions}&quot;">​</a></h3><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.AbstractVLBIPosterior" href="#Comrade.AbstractVLBIPosterior">#</a> <b><u>Comrade.AbstractVLBIPosterior</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractVLBIPosterior</span></span></code></pre></div><p>An abstract VLBI posterior. See <a href="/Comrade.jl/dev/api#Comrade.VLBIPosterior"><code>VLBIPosterior</code></a> for a concrete implementation. This implements the <code>DensityInterface</code> and <code>LogDensityProblem</code> interfaces.</p><p>Default methods include:</p><ul><li><p><code>logprior(d::AbstractVLBIPosterior, θ)</code>: Computes the log-prior of the posterior.</p></li><li><p><code>loglikelihood(d::AbstractVLBIPosterior, θ)</code>: Computes the log-likelihood of the posterior.</p></li><li><p><code>dimension(d::AbstractVLBIPosterior)</code>: Returns the dimension of the posterior.</p></li><li><p><code>skymodel(d::AbstractVLBIPosterior, θ)</code>: Returns the sky model of the posterior.</p></li><li><p><code>prior_sample(rng::AbstractRandom, d::AbstractVLBIPosterior, dims...)</code>: Samples from the prior of the posterior.</p></li><li><p><code>forward_model(d::AbstractVLBIPosterior, θ)</code>: Computes the forward model visibilities of the posterior.</p></li><li><p><code>dataproducts(d::AbstractVLBIPosterior)</code>: Returns the data products you are fitting as a tuple.</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/abstract.jl#L9-L25" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.logprior" href="#Comrade.logprior">#</a> <b><u>Comrade.logprior</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logprior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Computes the log-prior of the posterior <code>d</code> with parameters <code>θ</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/abstract.jl#L29-L33" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.loglikelihood" href="#Comrade.loglikelihood">#</a> <b><u>Comrade.loglikelihood</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">loglikelihood</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Computes the log-likelihood of the posterior <code>d</code> with parameters <code>θ</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/abstract.jl#L122-L126" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.dataproducts" href="#Comrade.dataproducts">#</a> <b><u>Comrade.dataproducts</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dataproducts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the data products you are fitting as a tuple. The order of the tuple corresponds to the order of the <code>dataproducts</code> argument in <a href="/Comrade.jl/dev/api#Comrade.VLBIPosterior"><code>VLBIPosterior</code></a>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/abstract.jl#L143-L148" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.skymodel" href="#Comrade.skymodel">#</a> <b><u>Comrade.skymodel</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skymodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the sky model of the posterior <code>d</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/abstract.jl#L39-L43" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skymodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Returns the sky model or image of a posterior using the parameter values<code>θ</code></p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/abstract.jl#L133-L137" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.instrumentmodel-Tuple{Comrade.AbstractVLBIPosterior}" href="#Comrade.instrumentmodel-Tuple{Comrade.AbstractVLBIPosterior}">#</a> <b><u>Comrade.instrumentmodel</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">instrumentmodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the instrument model of the posterior <code>d</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/abstract.jl#L46-L50" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.forward_model" href="#Comrade.forward_model">#</a> <b><u>Comrade.forward_model</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forward_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Computes the forward model visibilities of the posterior <code>d</code> with parameters <code>θ</code>. Note these are the complex visiblities or the coherency matrices, not the actual data products observed.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/abstract.jl#L110-L116" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.prior_sample" href="#Comrade.prior_sample">#</a> <b><u>Comrade.prior_sample</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prior_sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Returns sample from the prior distribution of the posterior. If dims is specified then multiple independent draws are returned with shape dims.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/abstract.jl#L93-L98" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.likelihood" href="#Comrade.likelihood">#</a> <b><u>Comrade.likelihood</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">likelihood</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ConditionedLikelihood</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, μ)</span></span></code></pre></div><p>Returns the likelihood of the model, with parameters μ. That is, we return the distribution of the data given the model parameters μ. Samples from this distribution are simulated data.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/likelihood.jl#L8-L14" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.VLBIPosterior" href="#Comrade.VLBIPosterior">#</a> <b><u>Comrade.VLBIPosterior</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(skymodel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, instumentmodel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dataproducts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservationTable...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a VLBILikelihood using the <code>skymodel</code> its related metadata <code>skymeta</code> and the <code>instrumentmodel</code> and its metadata <code>instumentmeta</code>. . The <code>model</code> is a function that converts from parameters <code>θ</code> to a Comrade AbstractModel which can be used to compute <a href="/Comrade.jl/dev/base_api#ComradeBase.visibilitymap"><code>visibilitymap</code></a> and a set of <code>metadata</code> that is used by <code>model</code> to compute the model.</p><p><strong>Warning</strong></p><p>The <code>model</code> itself must be a two argument function where the first argument is the set of model parameters and the second is a container that holds all the additional information needed to construct the model. An example of this is when the model needs some precomputed cache to define the model.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dlcamp, dcphase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogClosureAmplitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosurePhases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">array </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arrayconfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dlcamp)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sky</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(θ, metadata)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (; r, a) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> θ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> stretched</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExtendedRing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a), r, r)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> m</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skyprior </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Uniform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)), a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Uniform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> imagepixels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skym </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sky, skyprior, g)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SingleStokesGain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pg))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">intprior </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            pg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiagVonMises</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">intmodel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(G, intprior, array)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">post </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(skym, intmodel, dlcamp, dcphase)</span></span></code></pre></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/vlbiposterior.jl#L14-L54" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.simulate_observation" href="#Comrade.simulate_observation">#</a> <b><u>Comrade.simulate_observation</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">simulate_observation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Random.AbstractRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ; add_thermal_noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a simulated observation using the posterior and its data <code>post</code> using the parameter values <code>θ</code>. In Bayesian terminology this is a draw from the posterior predictive distribution.</p><p>If <code>add_thermal_noise</code> is true then baseline based thermal noise is added. Otherwise, we just return the model visibilities.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/vlbiposterior.jl#L112-L120" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.residuals" href="#Comrade.residuals">#</a> <b><u>Comrade.residuals</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">residuals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Compute the residuals for each data product in <code>post</code> using the parameter values <code>θ</code>. The resturn objects are <code>EHTObservationTables</code>, where the measurements are the residuals.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/vlbiposterior.jl#L139-L144" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.TransformedVLBIPosterior" href="#Comrade.TransformedVLBIPosterior">#</a> <b><u>Comrade.TransformedVLBIPosterior</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TransformedVLBIPosterior{P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractVLBIPosterior</span></span></code></pre></div><p>A transformed version of a <code>VLBIPosterior</code> object. This is an internal type that an end user shouldn&#39;t have to directly construct. To construct a transformed posterior see the <a href="/Comrade.jl/dev/api#HypercubeTransform.asflat-Tuple{VLBIPosterior}"><code>asflat</code></a>, <a href="/Comrade.jl/dev/api#HypercubeTransform.ascube-Tuple{VLBIPosterior}"><code>ascube</code></a>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/transformed.jl#L3-L8" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="TransformVariables.transform-Tuple{Comrade.TransformedVLBIPosterior, Any}" href="#TransformVariables.transform-Tuple{Comrade.TransformedVLBIPosterior, Any}">#</a> <b><u>TransformVariables.transform</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(posterior</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TransformedVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p>Transforms the value <code>x</code> from the transformed space (e.g. unit hypercube if using <a href="/Comrade.jl/dev/api#HypercubeTransform.ascube-Tuple{VLBIPosterior}"><code>ascube</code></a>) to parameter space which is usually encoded as a <code>NamedTuple</code>.</p><p>For the inverse transform see <a href="/Comrade.jl/dev/api#TransformVariables.inverse-Tuple{Comrade.TransformedVLBIPosterior, Any}"><code>inverse</code></a></p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/transformed.jl#L28-L35" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="TransformVariables.inverse-Tuple{Comrade.TransformedVLBIPosterior, Any}" href="#TransformVariables.inverse-Tuple{Comrade.TransformedVLBIPosterior, Any}">#</a> <b><u>TransformVariables.inverse</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(posterior</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TransformedVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p>Transforms the value <code>y</code> from parameter space to the transformed space (e.g. unit hypercube if using <a href="/Comrade.jl/dev/api#HypercubeTransform.ascube-Tuple{VLBIPosterior}"><code>ascube</code></a>).</p><p>For the inverse transform see <a href="/Comrade.jl/dev/api#TransformVariables.transform-Tuple{Comrade.TransformedVLBIPosterior, Any}"><code>transform</code></a></p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/transformed.jl#L39-L46" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="HypercubeTransform.ascube-Tuple{VLBIPosterior}" href="#HypercubeTransform.ascube-Tuple{VLBIPosterior}">#</a> <b><u>HypercubeTransform.ascube</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ascube</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a flattened version of the posterior where the parameters are transformed to live in (0, 1), i.e. the unit hypercube.</p><p>This returns a <code>TransformedVLBIPosterior</code> that obeys the <code>DensityInterface</code> and can be evaluated in the usual manner, i.e. <code>logdensityof</code>. Note that the transformed posterior automatically includes the terms log-jacobian terms of the transformation.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tpost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ascube</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> prior_sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tpost)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> logdensityof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tpost, x0)</span></span></code></pre></div><p><strong>Notes</strong></p><p>This is the transform that should be used if using typical NestedSampling methods, i.e. <code>ComradeNested</code>. For the transformation to unconstrained space see <a href="/Comrade.jl/dev/api#HypercubeTransform.asflat-Tuple{VLBIPosterior}"><code>asflat</code></a></p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/transformed.jl#L139-L159" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="HypercubeTransform.asflat-Tuple{VLBIPosterior}" href="#HypercubeTransform.asflat-Tuple{VLBIPosterior}">#</a> <b><u>HypercubeTransform.asflat</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">asflat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a flattened version of the posterior where the parameters are transformed to live in (-∞, ∞).</p><p>This returns a <code>TransformedVLBIPosterior</code> that obeys the <code>DensityInterface</code> and can be evaluated in the usual manner, i.e. <code>logdensityof</code>. Note that the transformed posterior automatically includes the terms log-jacobian terms of the transformation.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tpost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ascube</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> prior_sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tpost)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> logdensityof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tpost, x0)</span></span></code></pre></div><p><strong>Notes</strong></p><p>This is the transform that should be used if using typical MCMC methods, i.e. NUTS. For the transformation to the unit hypercube see <a href="/Comrade.jl/dev/api#HypercubeTransform.ascube-Tuple{VLBIPosterior}"><code>ascube</code></a></p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/posterior/transformed.jl#L49-L70" target="_blank" rel="noreferrer">source</a></p></div><br><h3 id="Inference" tabindex="-1">Inference <a class="header-anchor" href="#Inference" aria-label="Permalink to &quot;Inference {#Inference}&quot;">​</a></h3><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.comrade_opt" href="#Comrade.comrade_opt">#</a> <b><u>Comrade.comrade_opt</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comrade_opt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, opt, adtype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Optimization</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoAD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; initial_params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Optimize the posterior <code>post</code> using the <code>opt</code> optimizer. The <code>adtype</code> specifies the automatic differentiation. The <code>args/kwargs</code> are forwarded to \`the specific optimization package.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>This function won&#39;t have any methods until the optimization package is loaded. We recommend loading the <code>Optimization.jl</code> package.</p></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/inference/optimization.jl#L3-L12" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.MemoryStore" href="#Comrade.MemoryStore">#</a> <b><u>Comrade.MemoryStore</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MemoryStore</span></span></code></pre></div><p>Stored the HMC samplers in memory or ram.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/inference/inference.jl#L10-L14" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.DiskStore" href="#Comrade.DiskStore">#</a> <b><u>Comrade.DiskStore</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiskStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Results&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stride</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type that specifies to save the samples results to disk.</p><p><strong>Fields</strong></p><ul><li><p><code>name</code>: Path of the directory where the results will be saved. If the path does not exist it will be automatically created.</p></li><li><p><code>stride</code>: The output stride, i.e. every <code>stride</code> steps the MCMC output will be dumped to disk.</p></li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/inference/inference.jl#L18-L25" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.load_samples" href="#Comrade.load_samples">#</a> <b><u>Comrade.load_samples</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_samples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiskOutput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, indices</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Base.Colon, UnitRange, StepRange}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:samples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_samples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, indices</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Base.Colon, UnitRange, StepRange}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:samples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>The the results from a HMC run saved to disk. To read in the output the user can either pass the resulting <code>out</code> object, or the path to the directory that the results were saved, i.e. the path specified in <a href="/Comrade.jl/dev/api#Comrade.DiskStore"><code>DiskStore</code></a>.</p><p><strong>Arguments</strong></p><ul><li><p><code>out::Union{String, DiskOutput}</code>: If <code>out</code> is a string is must point to the direct that the <code>DiskStore</code> pointed to. Otherwise it is what is directly returned from sample.</p></li><li><p><code>indices</code>: The indices of the that you want to load into memory. The default is to load the entire table.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><code>table</code>: A string specifying the table you wish to read in. There are two options: :samples which corresponds to the actual MCMC chain, and <code>stats</code> which corresponds to additional information about the sampler, e.g., the log density of each sample and tree statistics.</li></ul><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/inference/inference.jl#L46-L64" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.PosteriorSamples" href="#Comrade.PosteriorSamples">#</a> <b><u>Comrade.PosteriorSamples</u></b> — <i>Type</i>. <p>PosteriorSamples(chain, stats; metadata=Dict(:sampler=&gt;:unknown))</p><p>This is the default sampler output from Comrade MCMC extensions. The object contains the posterior samples, the sampler statistics, and metadata about the sampler used.</p><p>Indexing this array behaves like indexing the samples organized as a StructArray. By default all NamedTuples and Tuples are unwrapped.</p><p>To access the samples use <a href="/Comrade.jl/dev/api#Comrade.postsamples"><code>postsamples</code></a> and to access the sampler statistics use <a href="/Comrade.jl/dev/api#Comrade.samplerstats"><code>samplerstats</code></a>, or the acesss sampler specific information use <a href="/Comrade.jl/dev/api#Comrade.samplerinfo"><code>samplerinfo</code></a>.</p><p>To recursively map a function over the samples the unexported <a href="/Comrade.jl/dev/api#Comrade.rmap"><code>Comrade.rmap</code></a>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/inference/posteriorsamples.jl#L46-L59" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.postsamples" href="#Comrade.postsamples">#</a> <b><u>Comrade.postsamples</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">postsamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PosteriorSamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the samples from the PosteriorSamples object <code>s</code></p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/inference/posteriorsamples.jl#L149-L153" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.samplerstats" href="#Comrade.samplerstats">#</a> <b><u>Comrade.samplerstats</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">samplerstats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PosteriorSamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the sampler statistics from the PosteriorSamples object <code>s</code></p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/inference/posteriorsamples.jl#L158-L162" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.samplerinfo" href="#Comrade.samplerinfo">#</a> <b><u>Comrade.samplerinfo</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">samplerinfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PosteriorSamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the metadata from the PosteriorSamples object <code>s</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/inference/posteriorsamples.jl#L168-L172" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.resample_equal" href="#Comrade.resample_equal">#</a> <b><u>Comrade.resample_equal</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resample_equal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PosteriorSamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nsamples</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Resample the posterior samples so you have <code>nsamples</code> of equal weight. In order for this method to be applicable a <code>:weights</code> field must be present in the sampler statistics and the weight must correspond to the probability weights of the samples.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/inference/posteriorsamples.jl#L178-L184" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.residual" href="#Comrade.residual">#</a> <b><u>Comrade.residual</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">residual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Plots the normalized residuals for the posterior <code>post</code> given the parameters <code>p</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/visualizations/data.jl#L256-L260" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.residual_data" href="#Comrade.residual_data">#</a> <b><u>Comrade.residual_data</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">residual_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vis, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the residuals for the model visibilities <code>vis</code> and the data <code>data</code>. The residuals are not normalized and the returned object is an <code>EHTObservationTable</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/visualizations/data.jl#L372-L377" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.chi2" href="#Comrade.chi2">#</a> <b><u>Comrade.chi2</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">chi2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Returns a tuple of the chi-squared values for each data product in the posterior <code>post</code> given the parameters <code>p</code>. Note that the chi-square is not reduced.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/visualizations/data.jl#L353-L358" target="_blank" rel="noreferrer">source</a></p></div><br><h2 id="Misc" tabindex="-1">Misc <a class="header-anchor" href="#Misc" aria-label="Permalink to &quot;Misc {#Misc}&quot;">​</a></h2><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.site_tuple" href="#Comrade.site_tuple">#</a> <b><u>Comrade.site_tuple</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sites, default; reference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, default; reference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, default; reference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Convienence function that will construct a <code>NamedTuple</code> of objects whose names are the <code>sites</code> in the observation <code>obs</code> or explicitly in the argument <code>sites</code>. The <code>NamedTuple</code> will be filled with <code>default</code> if no kwargs are defined otherwise each kwarg (key, value) pair denotes a sites and value pair.</p><p>Optionally the user can specify a <code>reference</code> sites that will be dropped from the tuple. This is useful for selecting a reference sites for gain phases</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sites </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:AA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:AP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:LM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:PV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sites, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), AP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), PV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sites, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); AA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FixedSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FixedSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), AP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), PV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sites, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); AA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FixedSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), PV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FixedSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), AP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), PV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sites, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); reference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:AA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), PV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/instrument/utility.jl#L3-L28" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.dirty_image" href="#Comrade.dirty_image">#</a> <b><u>Comrade.dirty_image</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dirty_image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fov</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, npix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservation{&lt;:EHTVisibilityDatum}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span></code></pre></div><p>Computes the dirty image of the complex visibilities assuming a field of view of <code>fov</code> and number of pixels <code>npix</code> using the complex visibilities found in the observation <code>obs</code>.</p><p>The <code>dirty image</code> is the inverse Fourier transform of the measured visibilties assuming every other visibility is zero.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/dirty_image.jl#L27-L36" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.dirty_beam" href="#Comrade.dirty_beam">#</a> <b><u>Comrade.dirty_beam</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dirty_beam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fov</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, npix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservation{&lt;:EHTVisibilityDatum}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the dirty beam of the complex visibilities assuming a field of view of <code>fov</code> and number of pixels <code>npix</code> using baseline coverage found in <code>obs</code>.</p><p>The <code>dirty beam</code> is the inverse Fourier transform of the (u,v) coverage assuming every visibility is unity and everywhere else is zero.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/dirty_image.jl#L51-L60" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.beamsize" href="#Comrade.beamsize">#</a> <b><u>Comrade.beamsize</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">beamsize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ac</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the approximate beam size of the array <code>ac</code> as the inverse of the longest baseline distance.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/array.jl#L44-L49" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">beamsize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the approximate beam size of the observation <code>obs</code> as the inverse of the longest baseline distance.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/obstable.jl#L73-L78" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.apply_fluctuations" href="#Comrade.apply_fluctuations">#</a> <b><u>Comrade.apply_fluctuations</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply_fluctuations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, mimg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, δ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Apply multiplicative fluctuations to an image <code>mimg</code> with fluctuations <code>δ</code>. The function <code>f</code> is applied to the fluctuations and then the the transfored δ are multiplicatively applied to the image.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/mrf_image.jl#L4-L10" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.rmap" href="#Comrade.rmap">#</a> <b><u>Comrade.rmap</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PosteriorSamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Recursively map a function <code>f</code> over the elements of <code>x</code>. For instance to compute the mean of all fields you can do <code>Comrade.rmap(mean, chain)</code></p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/inference/posteriorsamples.jl#L103-L108" target="_blank" rel="noreferrer">source</a></p></div><br><h2 id="Internal-(Not-Public-API)" tabindex="-1">Internal (Not Public API) <a class="header-anchor" href="#Internal-(Not-Public-API)" aria-label="Permalink to &quot;Internal (Not Public API) {#Internal-(Not-Public-API)}&quot;">​</a></h2><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.build_datum" href="#Comrade.build_datum">#</a> <b><u>Comrade.build_datum</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">build_datum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Build the datum <code>F</code> for a given observation table <code>data</code>. This is an internal method that users shouldn&#39;t have to deal with directly unless they are implementing a new <code>AbstractObservationTable</code>.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/obstable.jl#L51-L57" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.ObservedSkyModel" href="#Comrade.ObservedSkyModel">#</a> <b><u>Comrade.ObservedSkyModel</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ObservedSkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sky</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs a sky model that has been theoretically observed by an array with configuration <code>array</code>. Note that this is not a public facing method and is used internally to construct the observed sky model for use in <a href="/Comrade.jl/dev/api#Comrade.VLBIPosterior"><code>VLBIPosterior</code></a>. Users should construct a <a href="/Comrade.jl/dev/api#Comrade.SkyModel"><code>SkyModel</code></a> and pass that to a <a href="/Comrade.jl/dev/api#Comrade.VLBIPosterior"><code>VLBIPosterior</code></a> object instead.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/skymodels/models.jl#L85-L93" target="_blank" rel="noreferrer">source</a></p></div><br><h3 id="eht-imaging-interface-(Internal)" tabindex="-1">eht-imaging interface (Internal) <a class="header-anchor" href="#eht-imaging-interface-(Internal)" aria-label="Permalink to &quot;eht-imaging interface (Internal) {#eht-imaging-interface-(Internal)}&quot;">​</a></h3><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.extract_amp" href="#Comrade.extract_amp">#</a> <b><u>Comrade.extract_amp</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_amp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the visibility amplitudes from an <code>obs</code>. This is an internal method for dispatch. Only use this if interfacing Comrade with a new data type.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L161-L167" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.extract_cphase" href="#Comrade.extract_cphase">#</a> <b><u>Comrade.extract_cphase</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_cphase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the closure phases from an <code>obs</code>. This is an internal method for dispatch. Only use this if interfacing Comrade with a new data type.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L145-L151" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.extract_lcamp" href="#Comrade.extract_lcamp">#</a> <b><u>Comrade.extract_lcamp</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_lcamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the log-closure amplitudes from an <code>obs</code>. This is an internal method for dispatch. Only use this if interfacing Comrade with a new data type.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L153-L159" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.extract_vis" href="#Comrade.extract_vis">#</a> <b><u>Comrade.extract_vis</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_vis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the stokes I complex visibilities from an obs. This is an internal method for dispatch. Only use this if interfacing Comrade with a new data type.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L169-L175" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Comrade.extract_coherency" href="#Comrade.extract_coherency">#</a> <b><u>Comrade.extract_coherency</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_coherency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the full coherency matrix from an observation. This is an internal method for dispatch. Only use this if interfacing Comrade with a new data type.</p><p><a href="https://github.com/ptiede/Comrade.jl/blob/ac5e32454b06dc5168628c9c9cc4d59cadc83976/src/observations/dataproducts.jl#L177-L183" target="_blank" rel="noreferrer">source</a></p></div><br>`,232),l=[r];function d(n,h,p,o,k,c){return a(),s("div",null,l)}const u=i(t,[["render",d]]);export{b as __pageData,u as default};
